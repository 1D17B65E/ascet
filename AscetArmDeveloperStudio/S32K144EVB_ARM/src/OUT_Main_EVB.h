/******************************************************************************
 * DO NOT EDIT!
 * AUTOMATICALLY GENERATED BY:..ASCET-DEVELOPER V7.5.0
 * CODE GENERATOR:..............V7.5.0
 * COMPONENT:...................ascet.OUT.OUT_Main
 * REPRESENTATION:..............EVB
 * DESCRIPTION:
 *    
 ******************************************************************************/
#ifndef _ASD_OUT_MAIN_EVB_H_
#define _ASD_OUT_MAIN_EVB_H_


/*-----------------------------------------------------------------------------
 *    Include files
 *----------------------------------------------------------------------------*/

#include "esdl.h"
#include "sysconsts.h"
#include "chartab.h"
#include "IN_CANMessageInit_EVB.h"
#include "LIB_4BitCount_EVB.h"
#include "OUT_CANTxAnalogue_EVB.h"
#include "OUT_CANTxIC_EVB.h"
#include "OUT_CANTxLever_EVB.h"
#include "OUT_DigitalOutput_EVB.h"
#include "OUT_PWMOutput_EVB.h"
#include "T_CANLeverTCM_EVB.h"
#include "T_CANTxAnalogue_EVB.h"
#include "T_CANTxSpeeds_EVB.h"
#include "T_LeverOut_EVB.h"


/******************************************************************************
 * BEGIN: DEFINITION OF MEMORY CLASS STRUCTURE FOR MODULE 'OUT_MAIN_EVB'
 * ----------------------------------------------------------------------------
 * memory class:.................................'EFLASH'
 * ---------------------------------------------------------------------------*/
struct OUT_MAIN_EVB_EFLASH_SUBSTRUCT {
   uint32 OUT_ANA1ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_ANA2ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_ANA3ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_ANA4ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_IC1ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_IC2ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_IC3ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_IC4ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_IC5ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_IC6ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_IC7ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_IC8ID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint32 OUT_LEVERID;	/* min=0, max=4294967295, esdl_ident, limit=yes */
   uint8 OUT_ANA1CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_ANA2CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_ANA3CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_ANA4CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_IC1CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_IC2CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_IC3CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_IC4CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_IC5CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_IC6CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_IC7CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_IC8CHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   uint8 OUT_LEVERCHANNEL;	/* min=0, max=3, esdl_ident, limit=yes */
   boolean OUT_SENDPOT;	/* min=0, max=1, Identity, limit=yes */
};
/* ----------------------------------------------------------------------------
 * END: DEFINITION OF MEMORY CLASS STRUCTURE FOR MODULE 'OUT_MAIN_EVB'
 ******************************************************************************/


/******************************************************************************
 * BEGIN: DEFINITION OF MEMORY CLASS STRUCTURE FOR MODULE 'OUT_MAIN_EVB'
 * ----------------------------------------------------------------------------
 * memory class:.................................'IRAM'
 * ---------------------------------------------------------------------------*/
struct OUT_MAIN_EVB_IRAM_SUBSTRUCT {
   sint8 OUT_Ana1Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_Ana1Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_Ana2Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_Ana2Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_Ana3Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_Ana3Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_Ana4Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_Ana4Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   uint8 OUT_AnaSched;	/* min=0, max=15, esdl_ident, limit=yes */
   sint8 OUT_IC1Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_IC1Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_IC2Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_IC2Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_IC3Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_IC3Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_IC4Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_IC4Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_IC5Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_IC5Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_IC6Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_IC6Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_IC7Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_IC7Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   sint8 OUT_IC8Handle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_IC8Status;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   boolean OUT_ICMux;	/* min=0, max=1, Identity, limit=yes */
   uint8 OUT_ICSched;	/* min=0, max=15, esdl_ident, limit=yes */
   sint8 OUT_LeverHandle;	/* min=-128, max=127, esdl_ident, limit=yes */
   uint8 OUT_LeverStatus;	/* min=0, max=6, H_Status_tab_verb, limit=yes */
   struct T_CANTXANALOGUE_EVB OUT_CANTxAna1Data;
   struct T_CANTXANALOGUE_EVB OUT_CANTxAna2Data;
   struct T_CANTXANALOGUE_EVB OUT_CANTxAna3Data;
   struct T_CANTXANALOGUE_EVB OUT_CANTxAna4Data;
   struct T_CANLEVERTCM_EVB OUT_CANTxLeverData;
   struct T_CANTXSPEEDS_EVB OUT_CANTxSpeedsData;
   struct T_LEVEROUT_EVB T_LeverOut_instance;
   struct LIB_4BITCOUNT_EVB_IRAM_SUBSTRUCT OUT_CANCount;
};
/* ----------------------------------------------------------------------------
 * END: DEFINITION OF MEMORY CLASS STRUCTURE FOR MODULE 'OUT_MAIN_EVB'
 ******************************************************************************/


/******************************************************************************
 * BEGIN: DEFINITION OF MAIN STRUCTURE FOR MODULE 'OUT_MAIN_EVB'
 * ----------------------------------------------------------------------------
 * memory class:.................................'IFLASH'
 * ---------------------------------------------------------------------------*/
struct OUT_MAIN_EVB {
   struct LIB_4BITCOUNT_EVB OUT_CANCount;
};
/* ----------------------------------------------------------------------------
 * END: DEFINITION OF MAIN STRUCTURE FOR MODULE 'OUT_MAIN_EVB'
 ******************************************************************************/

/* Following DEFINE signalizes the completion of definition                   */
/* of data structs for component: ...............................OUT_MAIN_EVB */
#define _OUT_MAIN_EVB_TYPE_DEF_




/* forward declaration of substruct variable 'OUT_Main_EFLASH' */
/* containing 'EFLASH' memory class tree */
extern struct OUT_MAIN_EVB_EFLASH_SUBSTRUCT __attribute__ ((section (".par_ram"))) OUT_Main_EFLASH;

/* forward declaration of substruct variable 'OUT_Main_IRAM' */
/* containing 'IRAM' memory class tree */
extern struct OUT_MAIN_EVB_IRAM_SUBSTRUCT OUT_Main_IRAM;

/* forward declaration of component variable 'OUT_Main' */
/* containing 'IFLASH' memory class tree */
extern struct OUT_MAIN_EVB OUT_Main;

/******************************************************************************
 * BEGIN: declaration of global C functions defined by module OUT_MAIN_EVB
 ******************************************************************************/
extern void OUT_MAIN_EVB_OUT_100ms (void);
extern void OUT_MAIN_EVB_OUT_10ms (void);
extern void OUT_MAIN_EVB_OUT_1ms (void);
extern void OUT_MAIN_EVB_OUT_Init (void);



#endif /* _ASD_OUT_MAIN_EVB_H_ */
